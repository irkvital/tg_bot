services:
  postgres:
    env_file:
      - ./.env
    container_name: postgres_container
    image: postgres:latest
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - db-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      custom_net:
        ipv4_address: ${POSTGRES_IP}
    

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G


  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:latest
    env_file:
      - ./.env
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      custom_net:
        ipv4_address: 10.5.0.4


  bot:
    container_name: bot
    build:
      context: .
    env_file:
      - ./.env
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      custom_net:
        ipv4_address: 10.5.0.3


volumes:
  db-data:
  pgadmin-data:

networks:
  custom_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1
